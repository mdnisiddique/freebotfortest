
import logging
from telegram import Update, ChatPermissions
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ChatMemberHandler

TOKEN = "7834602350:AAFzoh1_rw6wSKekLoIQvy6XxeTSQOg3Lo0"

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BAD_WORDS_BN = ["‡¶Æ‡¶æ‡¶≤", "‡¶π‡¶æ‡¶∞‡¶æ‡¶Æ‡¶ø", "‡¶ö‡ßÅ‡¶¶", "‡¶ó‡¶æ‡¶≤‡¶ø‡ßß", "‡¶ó‡¶æ‡¶≤‡¶ø‡ß®", "‡¶ó‡¶æ‡¶≤‡¶ø‡ß©", "‡¶ö‡ßã‡¶¶", "‡¶∂‡ßÅ‡ßü‡ßã‡¶∞", "‡¶ö‡¶∞‡¶ø‡¶§‡ßç‡¶∞‡¶π‡ßÄ‡¶®", "‡¶®‡¶∑‡ßç‡¶ü‡¶æ", "‡¶´‡¶ï‡¶ø‡¶®‡ßç‡¶®‡¶ø", "‡¶¨‡¶æ‡¶ú‡ßá", "‡¶¨‡ßã‡¶ï‡¶æ", "‡¶¨‡¶æ‡¶≤‡ßá‡¶∞", "‡¶ö‡ßÅ‡¶¶‡¶ø", "‡¶ú‡¶æ‡¶∞‡¶ú", "‡¶ö‡ßÅ‡¶¶‡¶õ‡¶ø", "‡¶≠‡¶ø‡¶ï‡ßç‡¶∑‡ßÅ‡¶ï", "‡¶™‡¶æ‡¶ó‡¶≤", "‡¶§‡ßã‡¶∞ ‡¶¨‡¶æ‡¶™", "‡¶ó‡¶æ‡¶Å‡¶ú‡¶æ", "‡¶ö‡¶ø‡¶™‡¶æ", "‡¶ö‡¶ø‡¶∞‡ßÅ‡¶®‡¶ø", "‡¶ö‡ßÅ", "‡¶´‡¶æ‡¶ï"]
BAD_WORDS_EN = ["fuck", "shit", "bitch", "bastard", "idiot", "dumb", "moron", "stupid", "asshole", "sucker", "loser", "jerk", "damn", "freak", "crap", "piss", "retard", "dick", "cock", "hell", "slut", "hoe", "screw", "whore", "pussy"]

trigger_words = ["help", "problem", "‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø", "‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ", "‡¶π‡ßá‡¶≤‡ßç‡¶™", "‡¶∏‡¶Æ‡¶∏"]

referral_channel_link = "https://t.me/freelancer_ni"
referral_message = f"‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶ï‡¶≤ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ì ‡¶™‡¶ø‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá, ‡¶∞‡ßá‡¶´‡¶æ‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶™‡ßá‡¶§‡ßá ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ Telegram ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá ‡¶ú‡¶Ø‡¶º‡ßá‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®.!üëáüëâ\n{referral_channel_link}"

user_warnings = {}

async def welcome(update: Update, context: ContextTypes.DEFAULT_TYPE):
    for member in update.message.new_chat_members:
        name = member.full_name
        await update.message.reply_text(f"Hello {name}. ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ Telegram ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶ú‡ßü‡ßá‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶Ö‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶.!")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    user_id = update.message.from_user.id

    if any(bad in text for bad in BAD_WORDS_BN + BAD_WORDS_EN):
        user_warnings[user_id] = user_warnings.get(user_id, 0) + 1
        try:
            await update.message.delete()
        except:
            pass

        if user_warnings[user_id] == 1:
            await update.message.chat.restrict_member(user_id, ChatPermissions(can_send_messages=False), until_date=3600)
        elif user_warnings[user_id] == 2:
            await update.message.chat.restrict_member(user_id, ChatPermissions(can_send_messages=False), until_date=86400)
        elif user_warnings[user_id] >= 3:
            await update.message.chat.restrict_member(user_id, ChatPermissions(can_send_messages=False), until_date=259200)
        return

    if any(word in text for word in trigger_words):
        await update.message.reply_text(f"@{update.message.from_user.username} ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶¨‡¶æ Problem? ‡¶§‡¶æ ‡¶â‡¶≤‡ßç‡¶≤‡ßá‡¶ñ ‡¶ï‡¶∞‡ßá SMS/Voice ‡¶¨‡¶æ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶π‡¶≤‡ßá Screenshot ‡¶∏‡¶π ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®.!")

    if "ref" in text or "code" in text or "link" in text or "‡¶∞‡ßá‡¶´‡¶æ‡¶∞" in text:
        await update.message.reply_text(referral_message)

    if "http" in text or "t.me/" in text:
        try:
            await update.message.delete()
        except:
            pass
        await update.message.reply_text(referral_message)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Bot is running!")

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, welcome))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()

if __name__ == "__main__":
    main()
